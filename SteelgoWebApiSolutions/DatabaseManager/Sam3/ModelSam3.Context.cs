//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DatabaseManager.Sam3
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SamContext : DbContext
    {
        public SamContext()
            : base("name=SamContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Sam3_Acero> Sam3_Acero { get; set; }
        public virtual DbSet<Sam3_Bulto> Sam3_Bulto { get; set; }
        public virtual DbSet<Sam3_CatalogoCedulas> Sam3_CatalogoCedulas { get; set; }
        public virtual DbSet<Sam3_Catalogos> Sam3_Catalogos { get; set; }
        public virtual DbSet<Sam3_Cedula> Sam3_Cedula { get; set; }
        public virtual DbSet<Sam3_Chofer> Sam3_Chofer { get; set; }
        public virtual DbSet<Sam3_ClasificacionIncidencia> Sam3_ClasificacionIncidencia { get; set; }
        public virtual DbSet<Sam3_Cliente> Sam3_Cliente { get; set; }
        public virtual DbSet<Sam3_Colada> Sam3_Colada { get; set; }
        public virtual DbSet<Sam3_Color> Sam3_Color { get; set; }
        public virtual DbSet<Sam3_Contacto> Sam3_Contacto { get; set; }
        public virtual DbSet<Sam3_Corte> Sam3_Corte { get; set; }
        public virtual DbSet<Sam3_CorteDetalle> Sam3_CorteDetalle { get; set; }
        public virtual DbSet<Sam3_CorteSpool> Sam3_CorteSpool { get; set; }
        public virtual DbSet<Sam3_DeficitMateriales> Sam3_DeficitMateriales { get; set; }
        public virtual DbSet<Sam3_Despacho> Sam3_Despacho { get; set; }
        public virtual DbSet<Sam3_DetalleFolioPickingTicket> Sam3_DetalleFolioPickingTicket { get; set; }
        public virtual DbSet<Sam3_Diametro> Sam3_Diametro { get; set; }
        public virtual DbSet<Sam3_Entidad> Sam3_Entidad { get; set; }
        public virtual DbSet<Sam3_Entrega> Sam3_Entrega { get; set; }
        public virtual DbSet<Sam3_EquivalenciaAcero> Sam3_EquivalenciaAcero { get; set; }
        public virtual DbSet<Sam3_EquivalenciaCedula> Sam3_EquivalenciaCedula { get; set; }
        public virtual DbSet<Sam3_EquivalenciaColada> Sam3_EquivalenciaColada { get; set; }
        public virtual DbSet<Sam3_EquivalenciaCorte> Sam3_EquivalenciaCorte { get; set; }
        public virtual DbSet<Sam3_EquivalenciaCorteSpool> Sam3_EquivalenciaCorteSpool { get; set; }
        public virtual DbSet<Sam3_EquivalenciaDespacho> Sam3_EquivalenciaDespacho { get; set; }
        public virtual DbSet<Sam3_EquivalenciaDiametro> Sam3_EquivalenciaDiametro { get; set; }
        public virtual DbSet<Sam3_EquivalenciaEspesor> Sam3_EquivalenciaEspesor { get; set; }
        public virtual DbSet<Sam3_EquivalenciaEstacion> Sam3_EquivalenciaEstacion { get; set; }
        public virtual DbSet<Sam3_EquivalenciaEstatusOrden> Sam3_EquivalenciaEstatusOrden { get; set; }
        public virtual DbSet<Sam3_EquivalenciaFabArea> Sam3_EquivalenciaFabArea { get; set; }
        public virtual DbSet<Sam3_EquivalenciaFabricante> Sam3_EquivalenciaFabricante { get; set; }
        public virtual DbSet<Sam3_EquivalenciaFamiliaAcero> Sam3_EquivalenciaFamiliaAcero { get; set; }
        public virtual DbSet<Sam3_EquivalenciaFamiliaMaterial> Sam3_EquivalenciaFamiliaMaterial { get; set; }
        public virtual DbSet<Sam3_EquivalenciaItemCode> Sam3_EquivalenciaItemCode { get; set; }
        public virtual DbSet<Sam3_EquivalenciaJuntaSpool> Sam3_EquivalenciaJuntaSpool { get; set; }
        public virtual DbSet<Sam3_EquivalenciaMaterialSpool> Sam3_EquivalenciaMaterialSpool { get; set; }
        public virtual DbSet<Sam3_EquivalenciaNumeroUnico> Sam3_EquivalenciaNumeroUnico { get; set; }
        public virtual DbSet<Sam3_EquivalenciaNumeroUnicoMovimiento> Sam3_EquivalenciaNumeroUnicoMovimiento { get; set; }
        public virtual DbSet<Sam3_EquivalenciaODT> Sam3_EquivalenciaODT { get; set; }
        public virtual DbSet<Sam3_EquivalenciaODTJ> Sam3_EquivalenciaODTJ { get; set; }
        public virtual DbSet<Sam3_EquivalenciaODTM> Sam3_EquivalenciaODTM { get; set; }
        public virtual DbSet<Sam3_EquivalenciaODTS> Sam3_EquivalenciaODTS { get; set; }
        public virtual DbSet<Sam3_EquivalenciaPatio> Sam3_EquivalenciaPatio { get; set; }
        public virtual DbSet<Sam3_EquivalenciaProveedor> Sam3_EquivalenciaProveedor { get; set; }
        public virtual DbSet<Sam3_EquivalenciaProyecto> Sam3_EquivalenciaProyecto { get; set; }
        public virtual DbSet<Sam3_EquivalenciaSpool> Sam3_EquivalenciaSpool { get; set; }
        public virtual DbSet<Sam3_EquivalenciaTaller> Sam3_EquivalenciaTaller { get; set; }
        public virtual DbSet<Sam3_EquivalenciaTipoCorte> Sam3_EquivalenciaTipoCorte { get; set; }
        public virtual DbSet<Sam3_EquivalenciaTipoJunta> Sam3_EquivalenciaTipoJunta { get; set; }
        public virtual DbSet<Sam3_Espesor> Sam3_Espesor { get; set; }
        public virtual DbSet<Sam3_Estacion> Sam3_Estacion { get; set; }
        public virtual DbSet<Sam3_EstatusOrden> Sam3_EstatusOrden { get; set; }
        public virtual DbSet<Sam3_ExtensionDocumento> Sam3_ExtensionDocumento { get; set; }
        public virtual DbSet<Sam3_FabArea> Sam3_FabArea { get; set; }
        public virtual DbSet<Sam3_Fabricante> Sam3_Fabricante { get; set; }
        public virtual DbSet<Sam3_FamiliaAcero> Sam3_FamiliaAcero { get; set; }
        public virtual DbSet<Sam3_FamiliaItemCode> Sam3_FamiliaItemCode { get; set; }
        public virtual DbSet<Sam3_FamiliaMaterial> Sam3_FamiliaMaterial { get; set; }
        public virtual DbSet<Sam3_FolioAvisoEntrada> Sam3_FolioAvisoEntrada { get; set; }
        public virtual DbSet<Sam3_FolioAvisoLlegada> Sam3_FolioAvisoLlegada { get; set; }
        public virtual DbSet<Sam3_FolioCuantificacion> Sam3_FolioCuantificacion { get; set; }
        public virtual DbSet<Sam3_FolioImpresionDocumental> Sam3_FolioImpresionDocumental { get; set; }
        public virtual DbSet<Sam3_FolioPickingTicket> Sam3_FolioPickingTicket { get; set; }
        public virtual DbSet<Sam3_Grupo> Sam3_Grupo { get; set; }
        public virtual DbSet<Sam3_Incidencia> Sam3_Incidencia { get; set; }
        public virtual DbSet<Sam3_ItemCode> Sam3_ItemCode { get; set; }
        public virtual DbSet<Sam3_ItemCodeSteelgo> Sam3_ItemCodeSteelgo { get; set; }
        public virtual DbSet<Sam3_JuntaSpool> Sam3_JuntaSpool { get; set; }
        public virtual DbSet<Sam3_Maquina> Sam3_Maquina { get; set; }
        public virtual DbSet<Sam3_MaterialSpool> Sam3_MaterialSpool { get; set; }
        public virtual DbSet<Sam3_MenuContextual> Sam3_MenuContextual { get; set; }
        public virtual DbSet<Sam3_MenuGeneral> Sam3_MenuGeneral { get; set; }
        public virtual DbSet<Sam3_MTR> Sam3_MTR { get; set; }
        public virtual DbSet<Sam3_Notificacion> Sam3_Notificacion { get; set; }
        public virtual DbSet<Sam3_NumeroUnico> Sam3_NumeroUnico { get; set; }
        public virtual DbSet<Sam3_NumeroUnicoCorte> Sam3_NumeroUnicoCorte { get; set; }
        public virtual DbSet<Sam3_NumeroUnicoInventario> Sam3_NumeroUnicoInventario { get; set; }
        public virtual DbSet<Sam3_NumeroUnicoMovimiento> Sam3_NumeroUnicoMovimiento { get; set; }
        public virtual DbSet<Sam3_NumeroUnicoSegmento> Sam3_NumeroUnicoSegmento { get; set; }
        public virtual DbSet<Sam3_OrdenAlmacenaje> Sam3_OrdenAlmacenaje { get; set; }
        public virtual DbSet<Sam3_OrdenRecepcion> Sam3_OrdenRecepcion { get; set; }
        public virtual DbSet<Sam3_OrdenTrabajo> Sam3_OrdenTrabajo { get; set; }
        public virtual DbSet<Sam3_OrdenTrabajoJunta> Sam3_OrdenTrabajoJunta { get; set; }
        public virtual DbSet<Sam3_OrdenTrabajoMaterial> Sam3_OrdenTrabajoMaterial { get; set; }
        public virtual DbSet<Sam3_OrdenTrabajoSpool> Sam3_OrdenTrabajoSpool { get; set; }
        public virtual DbSet<Sam3_Pagina> Sam3_Pagina { get; set; }
        public virtual DbSet<Sam3_Patio> Sam3_Patio { get; set; }
        public virtual DbSet<Sam3_Perfil> Sam3_Perfil { get; set; }
        public virtual DbSet<Sam3_PermisoAduana> Sam3_PermisoAduana { get; set; }
        public virtual DbSet<Sam3_PinturaNumeroUnico> Sam3_PinturaNumeroUnico { get; set; }
        public virtual DbSet<Sam3_PreDespacho> Sam3_PreDespacho { get; set; }
        public virtual DbSet<Sam3_Preferencia> Sam3_Preferencia { get; set; }
        public virtual DbSet<Sam3_Propiedad> Sam3_Propiedad { get; set; }
        public virtual DbSet<Sam3_Proveedor> Sam3_Proveedor { get; set; }
        public virtual DbSet<Sam3_Proyecto> Sam3_Proyecto { get; set; }
        public virtual DbSet<Sam3_ProyectoConfiguracion> Sam3_ProyectoConfiguracion { get; set; }
        public virtual DbSet<Sam3_ProyectoConsecutivo> Sam3_ProyectoConsecutivo { get; set; }
        public virtual DbSet<Sam3_Recepcion> Sam3_Recepcion { get; set; }
        public virtual DbSet<Sam3_Rel_Bulto_ItemCode> Sam3_Rel_Bulto_ItemCode { get; set; }
        public virtual DbSet<Sam3_Rel_Catalogos_Documento> Sam3_Rel_Catalogos_Documento { get; set; }
        public virtual DbSet<Sam3_Rel_Documento_Entidad> Sam3_Rel_Documento_Entidad { get; set; }
        public virtual DbSet<Sam3_Rel_FolioAvisoEntrada_Documento> Sam3_Rel_FolioAvisoEntrada_Documento { get; set; }
        public virtual DbSet<Sam3_Rel_FolioAvisoEntrada_OrdenRecepcion> Sam3_Rel_FolioAvisoEntrada_OrdenRecepcion { get; set; }
        public virtual DbSet<Sam3_Rel_FolioAvisoLlegada_Documento> Sam3_Rel_FolioAvisoLlegada_Documento { get; set; }
        public virtual DbSet<Sam3_Rel_FolioAvisoLlegada_PaseSalida_Archivo> Sam3_Rel_FolioAvisoLlegada_PaseSalida_Archivo { get; set; }
        public virtual DbSet<Sam3_Rel_FolioAvisoLlegada_Proyecto> Sam3_Rel_FolioAvisoLlegada_Proyecto { get; set; }
        public virtual DbSet<Sam3_Rel_FolioAvisoLlegada_Vehiculo> Sam3_Rel_FolioAvisoLlegada_Vehiculo { get; set; }
        public virtual DbSet<Sam3_Rel_FolioCuantificacion_ItemCode> Sam3_Rel_FolioCuantificacion_ItemCode { get; set; }
        public virtual DbSet<Sam3_Rel_Incidencia_ComplementoRecepcion> Sam3_Rel_Incidencia_ComplementoRecepcion { get; set; }
        public virtual DbSet<Sam3_Rel_Incidencia_Corte> Sam3_Rel_Incidencia_Corte { get; set; }
        public virtual DbSet<Sam3_Rel_Incidencia_Despacho> Sam3_Rel_Incidencia_Despacho { get; set; }
        public virtual DbSet<Sam3_Rel_Incidencia_Documento> Sam3_Rel_Incidencia_Documento { get; set; }
        public virtual DbSet<Sam3_Rel_Incidencia_Entidad> Sam3_Rel_Incidencia_Entidad { get; set; }
        public virtual DbSet<Sam3_Rel_Incidencia_FolioAvisoEntrada> Sam3_Rel_Incidencia_FolioAvisoEntrada { get; set; }
        public virtual DbSet<Sam3_Rel_Incidencia_FolioAvisoLlegada> Sam3_Rel_Incidencia_FolioAvisoLlegada { get; set; }
        public virtual DbSet<Sam3_Rel_Incidencia_FolioCuantificacion> Sam3_Rel_Incidencia_FolioCuantificacion { get; set; }
        public virtual DbSet<Sam3_Rel_Incidencia_ItemCode> Sam3_Rel_Incidencia_ItemCode { get; set; }
        public virtual DbSet<Sam3_Rel_Incidencia_NumeroUnico> Sam3_Rel_Incidencia_NumeroUnico { get; set; }
        public virtual DbSet<Sam3_Rel_Incidencia_OrdenAlmacenaje> Sam3_Rel_Incidencia_OrdenAlmacenaje { get; set; }
        public virtual DbSet<Sam3_Rel_Incidencia_OrdenRecepcion> Sam3_Rel_Incidencia_OrdenRecepcion { get; set; }
        public virtual DbSet<Sam3_Rel_Incidencia_PaseSalida> Sam3_Rel_Incidencia_PaseSalida { get; set; }
        public virtual DbSet<Sam3_Rel_Itemcode_Colada> Sam3_Rel_Itemcode_Colada { get; set; }
        public virtual DbSet<Sam3_Rel_ItemCode_Diametro> Sam3_Rel_ItemCode_Diametro { get; set; }
        public virtual DbSet<Sam3_Rel_ItemCode_ItemCodeSteelgo> Sam3_Rel_ItemCode_ItemCodeSteelgo { get; set; }
        public virtual DbSet<Sam3_Rel_ItemCodeSteelgo_Diametro> Sam3_Rel_ItemCodeSteelgo_Diametro { get; set; }
        public virtual DbSet<Sam3_Rel_NumeroUnico_RelFC_RelB> Sam3_Rel_NumeroUnico_RelFC_RelB { get; set; }
        public virtual DbSet<Sam3_Rel_OrdenAlmacenaje_NumeroUnico> Sam3_Rel_OrdenAlmacenaje_NumeroUnico { get; set; }
        public virtual DbSet<Sam3_Rel_OrdenRecepcion_ItemCode> Sam3_Rel_OrdenRecepcion_ItemCode { get; set; }
        public virtual DbSet<Sam3_Rel_Perfil_MenuContextual> Sam3_Rel_Perfil_MenuContextual { get; set; }
        public virtual DbSet<Sam3_Rel_Perfil_MenuGeneral> Sam3_Rel_Perfil_MenuGeneral { get; set; }
        public virtual DbSet<Sam3_Rel_Perfil_Propiedad_Pagina> Sam3_Rel_Perfil_Propiedad_Pagina { get; set; }
        public virtual DbSet<Sam3_Rel_PermisoAduana_Documento> Sam3_Rel_PermisoAduana_Documento { get; set; }
        public virtual DbSet<Sam3_Rel_Proyecto_Correo> Sam3_Rel_Proyecto_Correo { get; set; }
        public virtual DbSet<Sam3_Rel_Proyecto_Entidad_Configuracion> Sam3_Rel_Proyecto_Entidad_Configuracion { get; set; }
        public virtual DbSet<Sam3_Rel_TiposDocumentos_ExtencionesDocumentos> Sam3_Rel_TiposDocumentos_ExtencionesDocumentos { get; set; }
        public virtual DbSet<Sam3_Rel_Usuario_Preferencia> Sam3_Rel_Usuario_Preferencia { get; set; }
        public virtual DbSet<Sam3_Rel_Usuario_Proyecto> Sam3_Rel_Usuario_Proyecto { get; set; }
        public virtual DbSet<Sam3_Rel_Vehiculo_Chofer> Sam3_Rel_Vehiculo_Chofer { get; set; }
        public virtual DbSet<Sam3_Rel_Vehiculo_Transportista> Sam3_Rel_Vehiculo_Transportista { get; set; }
        public virtual DbSet<Sam3_Repositorio> Sam3_Repositorio { get; set; }
        public virtual DbSet<Sam3_RequisicionNumeroUnico> Sam3_RequisicionNumeroUnico { get; set; }
        public virtual DbSet<Sam3_RequisicionNumeroUnicoDetalle> Sam3_RequisicionNumeroUnicoDetalle { get; set; }
        public virtual DbSet<Sam3_Sesion> Sam3_Sesion { get; set; }
        public virtual DbSet<Sam3_Spool> Sam3_Spool { get; set; }
        public virtual DbSet<sam3_sysgo_mrr> sam3_sysgo_mrr { get; set; }
        public virtual DbSet<Sam3_Taller> Sam3_Taller { get; set; }
        public virtual DbSet<Sam3_TipoArchivo> Sam3_TipoArchivo { get; set; }
        public virtual DbSet<Sam3_TipoArchivo_Catalogo> Sam3_TipoArchivo_Catalogo { get; set; }
        public virtual DbSet<Sam3_TipoAviso> Sam3_TipoAviso { get; set; }
        public virtual DbSet<Sam3_TipoCorte> Sam3_TipoCorte { get; set; }
        public virtual DbSet<Sam3_TipoDocumento> Sam3_TipoDocumento { get; set; }
        public virtual DbSet<Sam3_TipoIncidencia> Sam3_TipoIncidencia { get; set; }
        public virtual DbSet<Sam3_TipoJunta> Sam3_TipoJunta { get; set; }
        public virtual DbSet<Sam3_TipoMaterial> Sam3_TipoMaterial { get; set; }
        public virtual DbSet<Sam3_TipoMovimiento> Sam3_TipoMovimiento { get; set; }
        public virtual DbSet<Sam3_TipoNotificacion> Sam3_TipoNotificacion { get; set; }
        public virtual DbSet<Sam3_TipoUso> Sam3_TipoUso { get; set; }
        public virtual DbSet<Sam3_TipoVehiculo> Sam3_TipoVehiculo { get; set; }
        public virtual DbSet<Sam3_Transportista> Sam3_Transportista { get; set; }
        public virtual DbSet<Sam3_UbicacionFisica> Sam3_UbicacionFisica { get; set; }
        public virtual DbSet<Sam3_Usuario> Sam3_Usuario { get; set; }
        public virtual DbSet<Sam3_UsuariosNotificaciones> Sam3_UsuariosNotificaciones { get; set; }
        public virtual DbSet<Sam3_Vehiculo> Sam3_Vehiculo { get; set; }
        public virtual DbSet<tempInsert> tempInsert { get; set; }
        public virtual DbSet<Sam3_ColaCreacionNumerosUnicos> Sam3_ColaCreacionNumerosUnicos { get; set; }
        public virtual DbSet<Sam3_Rel_Perfil_Entidad_Pagina> Sam3_Rel_Perfil_Entidad_Pagina { get; set; }
        public virtual DbSet<sam3_sysgo_mrr_franklin> sam3_sysgo_mrr_franklin { get; set; }
        public virtual DbSet<sam3_sysgo_mrr_pacial> sam3_sysgo_mrr_pacial { get; set; }
        public virtual DbSet<sam3_temp_RelIncidenciaItemCode> sam3_temp_RelIncidenciaItemCode { get; set; }
        public virtual DbSet<VW_AvisoEntrada> VW_AvisoEntrada { get; set; }
        public virtual DbSet<VW_FolioCuantificacion> VW_FolioCuantificacion { get; set; }
        public virtual DbSet<VW_ItemCode_ICS> VW_ItemCode_ICS { get; set; }
        public virtual DbSet<VW_ItemCodes> VW_ItemCodes { get; set; }
        public virtual DbSet<VW_NumerosUnicos> VW_NumerosUnicos { get; set; }
        public virtual DbSet<VW_ResumenNU> VW_ResumenNU { get; set; }
        public virtual DbSet<Sam3_Rack> Sam3_Rack { get; set; }
    
        [DbFunction("SamContext", "fnSplitString")]
        public virtual IQueryable<fnSplitString_Result> fnSplitString(string @string, string delimiter)
        {
            var stringParameter = @string != null ?
                new ObjectParameter("string", @string) :
                new ObjectParameter("string", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("delimiter", delimiter) :
                new ObjectParameter("delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fnSplitString_Result>("[SamContext].[fnSplitString](@string, @delimiter)", stringParameter, delimiterParameter);
        }
    
        [DbFunction("SamContext", "Sam3_SplitInts")]
        public virtual IQueryable<Sam3_SplitInts_Result> Sam3_SplitInts(string list, string delimiter)
        {
            var listParameter = list != null ?
                new ObjectParameter("List", list) :
                new ObjectParameter("List", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("Delimiter", delimiter) :
                new ObjectParameter("Delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Sam3_SplitInts_Result>("[SamContext].[Sam3_SplitInts](@List, @Delimiter)", listParameter, delimiterParameter);
        }
    
        [DbFunction("SamContext", "SplitInts")]
        public virtual IQueryable<SplitInts_Result> SplitInts(string list, string delimiter)
        {
            var listParameter = list != null ?
                new ObjectParameter("List", list) :
                new ObjectParameter("List", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("Delimiter", delimiter) :
                new ObjectParameter("Delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SplitInts_Result>("[SamContext].[SplitInts](@List, @Delimiter)", listParameter, delimiterParameter);
        }
    
        [DbFunction("SamContext", "SplitStringISO")]
        public virtual IQueryable<SplitStringISO_Result> SplitStringISO(string @string, string delim, Nullable<int> item)
        {
            var stringParameter = @string != null ?
                new ObjectParameter("string", @string) :
                new ObjectParameter("string", typeof(string));
    
            var delimParameter = delim != null ?
                new ObjectParameter("delim", delim) :
                new ObjectParameter("delim", typeof(string));
    
            var itemParameter = item.HasValue ?
                new ObjectParameter("item", item) :
                new ObjectParameter("item", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SplitStringISO_Result>("[SamContext].[SplitStringISO](@string, @delim, @item)", stringParameter, delimParameter, itemParameter);
        }
    
        public virtual ObjectResult<mrrFranklin_Result> mrrFranklin(string embarques)
        {
            var embarquesParameter = embarques != null ?
                new ObjectParameter("embarques", embarques) :
                new ObjectParameter("embarques", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<mrrFranklin_Result>("mrrFranklin", embarquesParameter);
        }
    
        public virtual ObjectResult<mrrFranklin_respaldo_Result> mrrFranklin_respaldo(string embarques)
        {
            var embarquesParameter = embarques != null ?
                new ObjectParameter("embarques", embarques) :
                new ObjectParameter("embarques", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<mrrFranklin_respaldo_Result>("mrrFranklin_respaldo", embarquesParameter);
        }
    
        public virtual ObjectResult<Sam3_GetErrorInfo_Result> Sam3_GetErrorInfo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sam3_GetErrorInfo_Result>("Sam3_GetErrorInfo");
        }
    
        public virtual ObjectResult<Sam3_ObtenerFormatoEtiquetas_Result> Sam3_ObtenerFormatoEtiquetas(Nullable<int> ordenRecepcionID)
        {
            var ordenRecepcionIDParameter = ordenRecepcionID.HasValue ?
                new ObjectParameter("OrdenRecepcionID", ordenRecepcionID) :
                new ObjectParameter("OrdenRecepcionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sam3_ObtenerFormatoEtiquetas_Result>("Sam3_ObtenerFormatoEtiquetas", ordenRecepcionIDParameter);
        }
    
        public virtual ObjectResult<Sam3_ObtenerFormatoIncidencias_Result> Sam3_ObtenerFormatoIncidencias(Nullable<int> folioAvisoLlegadaID, string cadena)
        {
            var folioAvisoLlegadaIDParameter = folioAvisoLlegadaID.HasValue ?
                new ObjectParameter("FolioAvisoLlegadaID", folioAvisoLlegadaID) :
                new ObjectParameter("FolioAvisoLlegadaID", typeof(int));
    
            var cadenaParameter = cadena != null ?
                new ObjectParameter("cadena", cadena) :
                new ObjectParameter("cadena", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sam3_ObtenerFormatoIncidencias_Result>("Sam3_ObtenerFormatoIncidencias", folioAvisoLlegadaIDParameter, cadenaParameter);
        }
    
        public virtual int Sam3_ObtenerFormatoPaseSalida(Nullable<int> folioAvisoLlegadaID)
        {
            var folioAvisoLlegadaIDParameter = folioAvisoLlegadaID.HasValue ?
                new ObjectParameter("FolioAvisoLlegadaID", folioAvisoLlegadaID) :
                new ObjectParameter("FolioAvisoLlegadaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sam3_ObtenerFormatoPaseSalida", folioAvisoLlegadaIDParameter);
        }
    
        public virtual ObjectResult<Sam3_ObtenerIncidencia_Result> Sam3_ObtenerIncidencia(Nullable<int> incidenciaID)
        {
            var incidenciaIDParameter = incidenciaID.HasValue ?
                new ObjectParameter("incidenciaID", incidenciaID) :
                new ObjectParameter("incidenciaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sam3_ObtenerIncidencia_Result>("Sam3_ObtenerIncidencia", incidenciaIDParameter);
        }
    
        public virtual ObjectResult<Sam3_PickingTicket_Accesorios_Result> Sam3_PickingTicket_Accesorios(Nullable<int> ordenTrabajoSpoolID)
        {
            var ordenTrabajoSpoolIDParameter = ordenTrabajoSpoolID.HasValue ?
                new ObjectParameter("OrdenTrabajoSpoolID", ordenTrabajoSpoolID) :
                new ObjectParameter("OrdenTrabajoSpoolID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sam3_PickingTicket_Accesorios_Result>("Sam3_PickingTicket_Accesorios", ordenTrabajoSpoolIDParameter);
        }
    
        public virtual ObjectResult<Sam3_PickingTicket_Tubos_Result> Sam3_PickingTicket_Tubos(Nullable<int> ordenTrabajoSpoolID)
        {
            var ordenTrabajoSpoolIDParameter = ordenTrabajoSpoolID.HasValue ?
                new ObjectParameter("OrdenTrabajoSpoolID", ordenTrabajoSpoolID) :
                new ObjectParameter("OrdenTrabajoSpoolID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sam3_PickingTicket_Tubos_Result>("Sam3_PickingTicket_Tubos", ordenTrabajoSpoolIDParameter);
        }
    
        public virtual ObjectResult<Sam3_RPT_EncabezadoReporteIncidencias_Result> Sam3_RPT_EncabezadoReporteIncidencias(Nullable<int> incidenciaID)
        {
            var incidenciaIDParameter = incidenciaID.HasValue ?
                new ObjectParameter("incidenciaID", incidenciaID) :
                new ObjectParameter("incidenciaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sam3_RPT_EncabezadoReporteIncidencias_Result>("Sam3_RPT_EncabezadoReporteIncidencias", incidenciaIDParameter);
        }
    
        public virtual ObjectResult<Sam3_RPT_EtiquetasDeMaterial_Result> Sam3_RPT_EtiquetasDeMaterial(Nullable<int> ordenRecepcionID)
        {
            var ordenRecepcionIDParameter = ordenRecepcionID.HasValue ?
                new ObjectParameter("ordenRecepcionID", ordenRecepcionID) :
                new ObjectParameter("ordenRecepcionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sam3_RPT_EtiquetasDeMaterial_Result>("Sam3_RPT_EtiquetasDeMaterial", ordenRecepcionIDParameter);
        }
    
        public virtual ObjectResult<Sam3_RPT_ListaImagenesIncidencia_Result> Sam3_RPT_ListaImagenesIncidencia(Nullable<int> incidenciaID)
        {
            var incidenciaIDParameter = incidenciaID.HasValue ?
                new ObjectParameter("incidenciaID", incidenciaID) :
                new ObjectParameter("incidenciaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sam3_RPT_ListaImagenesIncidencia_Result>("Sam3_RPT_ListaImagenesIncidencia", incidenciaIDParameter);
        }
    
        public virtual ObjectResult<Sam3_RPT_OrdenAlmacenaje_Result> Sam3_RPT_OrdenAlmacenaje(Nullable<int> ordenAlmacenajeID, Nullable<int> usuarioID)
        {
            var ordenAlmacenajeIDParameter = ordenAlmacenajeID.HasValue ?
                new ObjectParameter("ordenAlmacenajeID", ordenAlmacenajeID) :
                new ObjectParameter("ordenAlmacenajeID", typeof(int));
    
            var usuarioIDParameter = usuarioID.HasValue ?
                new ObjectParameter("usuarioID", usuarioID) :
                new ObjectParameter("usuarioID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sam3_RPT_OrdenAlmacenaje_Result>("Sam3_RPT_OrdenAlmacenaje", ordenAlmacenajeIDParameter, usuarioIDParameter);
        }
    
        public virtual ObjectResult<Sam3_RPT_OrdenRecepcion_Result> Sam3_RPT_OrdenRecepcion(Nullable<int> ordenRecepcionID, Nullable<int> usuarioID)
        {
            var ordenRecepcionIDParameter = ordenRecepcionID.HasValue ?
                new ObjectParameter("ordenRecepcionID", ordenRecepcionID) :
                new ObjectParameter("ordenRecepcionID", typeof(int));
    
            var usuarioIDParameter = usuarioID.HasValue ?
                new ObjectParameter("usuarioID", usuarioID) :
                new ObjectParameter("usuarioID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sam3_RPT_OrdenRecepcion_Result>("Sam3_RPT_OrdenRecepcion", ordenRecepcionIDParameter, usuarioIDParameter);
        }
    
        public virtual int Sam3_RPT_PaseSalidaTransportista(Nullable<int> folioAvisoLlegadaID, Nullable<int> idUsuario)
        {
            var folioAvisoLlegadaIDParameter = folioAvisoLlegadaID.HasValue ?
                new ObjectParameter("FolioAvisoLlegadaID", folioAvisoLlegadaID) :
                new ObjectParameter("FolioAvisoLlegadaID", typeof(int));
    
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sam3_RPT_PaseSalidaTransportista", folioAvisoLlegadaIDParameter, idUsuarioParameter);
        }
    
        public virtual ObjectResult<Sam3_SP_InsertarItemCodeSteelgo_Result> Sam3_SP_InsertarItemCodeSteelgo(string descripcionEspanol, string descripcionIngles, Nullable<decimal> peso, Nullable<int> familiaAceroID, Nullable<decimal> area, Nullable<int> catalogoCedulaID, string codigo, Nullable<int> grupoID, string descripcionLargaEspanol, string descripcionLargaIngles, Nullable<decimal> diametro1, Nullable<decimal> diametro2)
        {
            var descripcionEspanolParameter = descripcionEspanol != null ?
                new ObjectParameter("DescripcionEspanol", descripcionEspanol) :
                new ObjectParameter("DescripcionEspanol", typeof(string));
    
            var descripcionInglesParameter = descripcionIngles != null ?
                new ObjectParameter("DescripcionIngles", descripcionIngles) :
                new ObjectParameter("DescripcionIngles", typeof(string));
    
            var pesoParameter = peso.HasValue ?
                new ObjectParameter("Peso", peso) :
                new ObjectParameter("Peso", typeof(decimal));
    
            var familiaAceroIDParameter = familiaAceroID.HasValue ?
                new ObjectParameter("FamiliaAceroID", familiaAceroID) :
                new ObjectParameter("FamiliaAceroID", typeof(int));
    
            var areaParameter = area.HasValue ?
                new ObjectParameter("Area", area) :
                new ObjectParameter("Area", typeof(decimal));
    
            var catalogoCedulaIDParameter = catalogoCedulaID.HasValue ?
                new ObjectParameter("CatalogoCedulaID", catalogoCedulaID) :
                new ObjectParameter("CatalogoCedulaID", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var grupoIDParameter = grupoID.HasValue ?
                new ObjectParameter("GrupoID", grupoID) :
                new ObjectParameter("GrupoID", typeof(int));
    
            var descripcionLargaEspanolParameter = descripcionLargaEspanol != null ?
                new ObjectParameter("DescripcionLargaEspanol", descripcionLargaEspanol) :
                new ObjectParameter("DescripcionLargaEspanol", typeof(string));
    
            var descripcionLargaInglesParameter = descripcionLargaIngles != null ?
                new ObjectParameter("DescripcionLargaIngles", descripcionLargaIngles) :
                new ObjectParameter("DescripcionLargaIngles", typeof(string));
    
            var diametro1Parameter = diametro1.HasValue ?
                new ObjectParameter("Diametro1", diametro1) :
                new ObjectParameter("Diametro1", typeof(decimal));
    
            var diametro2Parameter = diametro2.HasValue ?
                new ObjectParameter("Diametro2", diametro2) :
                new ObjectParameter("Diametro2", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sam3_SP_InsertarItemCodeSteelgo_Result>("Sam3_SP_InsertarItemCodeSteelgo", descripcionEspanolParameter, descripcionInglesParameter, pesoParameter, familiaAceroIDParameter, areaParameter, catalogoCedulaIDParameter, codigoParameter, grupoIDParameter, descripcionLargaEspanolParameter, descripcionLargaInglesParameter, diametro1Parameter, diametro2Parameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Sam3_SP_ObtenerFoliosParaListado(Nullable<int> folioAvisoEntrada, Nullable<int> folioAvisoLlegada, string proyectoIds, string patioIds, Nullable<System.DateTime> fechaInicial, Nullable<System.DateTime> fechaFinal)
        {
            var folioAvisoEntradaParameter = folioAvisoEntrada.HasValue ?
                new ObjectParameter("FolioAvisoEntrada", folioAvisoEntrada) :
                new ObjectParameter("FolioAvisoEntrada", typeof(int));
    
            var folioAvisoLlegadaParameter = folioAvisoLlegada.HasValue ?
                new ObjectParameter("FolioAvisoLlegada", folioAvisoLlegada) :
                new ObjectParameter("FolioAvisoLlegada", typeof(int));
    
            var proyectoIdsParameter = proyectoIds != null ?
                new ObjectParameter("proyectoIds", proyectoIds) :
                new ObjectParameter("proyectoIds", typeof(string));
    
            var patioIdsParameter = patioIds != null ?
                new ObjectParameter("PatioIds", patioIds) :
                new ObjectParameter("PatioIds", typeof(string));
    
            var fechaInicialParameter = fechaInicial.HasValue ?
                new ObjectParameter("fechaInicial", fechaInicial) :
                new ObjectParameter("fechaInicial", typeof(System.DateTime));
    
            var fechaFinalParameter = fechaFinal.HasValue ?
                new ObjectParameter("fechaFinal", fechaFinal) :
                new ObjectParameter("fechaFinal", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Sam3_SP_ObtenerFoliosParaListado", folioAvisoEntradaParameter, folioAvisoLlegadaParameter, proyectoIdsParameter, patioIdsParameter, fechaInicialParameter, fechaFinalParameter);
        }
    }
}
